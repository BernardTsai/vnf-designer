#!/usr/bin/env ansible-playbook
---
- name: Create server inventory of the tenant
  hosts:        localhost
  connection:   local
  gather_facts: false
  vars:
    ansible_python_interpreter: "{{ '{{ansible_playbook_python}}' }}"
  vars_files:
    - ../../input/environment.yml
  environment: "{{ '{{env_vars}}' }}"
  tasks:
    - name: Define prefix
      set_fact:
        prefix: "{{tenant.prefix}}"

    - name: Define jumphost
      set_fact:
        jumphost: {{tenant.jumphost}}

    - name: Define servers
      set_fact:
        server_names:
{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}
{% if component.max == 1 %}
          - {{tenant.prefix}}{{component.name}}
{% else %}
{% for server_index in range(1,1+component.max,1) %}
          - {{tenant.prefix}}{{component.name}}-{{server_index}}
{% endfor %}
{% endif %}
{% endif %}{% endif %}{% endfor %}

    - name: Define ssh servers
      set_fact:
        ssh_server_names:
{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}{% if component.user != '' %}
{% if component.max == 1 %}
          - {{tenant.prefix}}{{component.name}}
{% else %}
{% for server_index in range(1,1+component.max,1) %}
          - {{tenant.prefix}}{{component.name}}-{{server_index}}
{% endfor %}
{% endif %}
{% endif %}{% endif %}{% endif %}{% endfor %}


    - name: Define ports
      set_fact:
        port_names:
{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}
{% for componentInterface in component.componentInterfaces %}
{% if component.max == 1 %}
          - {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}
{% else %}
{% for server_index in range(1,component.max,1) %}
          - {{tenant.prefix}}{{component.name}}-{{server_index}}_{{tenant.prefix}}{{componentInterface.network}}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}{% endif %}{% endfor %}

    - name: Collect server information
      os_server_facts:
         validate_certs: no
      register: servers
      ignore_errors: yes

    - name: Collect port information
      os_port_facts:
         validate_certs: no
      register: ports
      ignore_errors: yes

    - name: Create report 'servers.yml'
      template:
        src:  ../templates/servers.tmpl
        dest: ../../output/servers.yml
      delegate_to:  localhost
      changed_when: false

    - name: Create ansible ssh config
      template:
        src:  ../templates/config
        dest: ../../output/config
      delegate_to:  localhost
      changed_when: false

    - name: Create ansible inventory
      template:
        src:  ../templates/inventory
        dest: ../../output/inventory
      delegate_to:  localhost
      changed_when: false
