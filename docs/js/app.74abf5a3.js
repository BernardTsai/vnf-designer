(function(e){function n(n){for(var o,r,s=n[0],c=n[1],p=n[2],m=0,f=[];m<s.length;m++)r=s[m],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&f.push(i[r][0]),i[r]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(e[o]=c[o]);d&&d(n);while(f.length)f.shift()();return a.push.apply(a,p||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],o=!0,r=1;r<t.length;r++){var s=t[r];0!==i[s]&&(o=!1)}o&&(a.splice(n--,1),e=c(c.s=t[0]))}return e}var o={},r={app:0},i={app:0},a=[];function s(e){return c.p+"js/"+({about:"about"}[e]||e)+"."+{about:"de97594d","chunk-03c229be":"651870ee","chunk-0a483282":"b5f76e46","chunk-0e3452c3":"dda7554d","chunk-10bbff56":"550254f7","chunk-18aa50ba":"d2c83967","chunk-2d0bda08":"de1877a9","chunk-2d0ce7eb":"0febfe55","chunk-2d0cebfb":"6dfd7272","chunk-2d21ed27":"bb5a0504","chunk-2dc35639":"f09754b9","chunk-35d7d228":"3b66b86f","chunk-360c663a":"c195d75e","chunk-54cb55e5":"6b491b8e","chunk-70e8bc69":"b6d5620a","chunk-9c8ee19a":"0182b6ef","chunk-dac2a49c":"172d6a88","chunk-df2448ca":"4f06de37","chunk-e69663dc":"3c353906","chunk-10c1dfcb":"6f6223ca","chunk-17a2a7ca":"ef5987a1","chunk-1c9fe3c0":"fd83e01a","chunk-2d0ab85d":"432c5de2","chunk-2d0ba6b9":"1fa0d270","chunk-2d0d7215":"45a4c420","chunk-2d0dde0c":"2cc95740","chunk-2d0de6e4":"4a015250","chunk-2d207805":"acfb4b10","chunk-2d213ec7":"40cf5c1b","chunk-2d2183ee":"c2c91677","chunk-2d21eebb":"14410800","chunk-2d222176":"c6f8c061","chunk-2da9c6f6":"3190f9ac","chunk-3d6dbb4c":"c4208168","chunk-4140649c":"3543e2b3","chunk-4419e8a6":"908aadfd","chunk-465a8008":"847d4977","chunk-4c1d6c2a":"09928bf8","chunk-52664264":"aaf26531","chunk-6461589e":"fe469a05","chunk-7399fa48":"1ff657c5","chunk-750c4a2b":"c69b0077","chunk-995d13ee":"6996f7f1","chunk-acf006bc":"c6f95e14","chunk-f4618fe0":"558b195e","chunk-fbd22abe":"a206301b","chunk-2d0b2b24":"fca7cd41","chunk-2d0c7944":"9ae58561","chunk-2d0e6864":"0d72bac5","chunk-6e2503b6":"dadf1fc9"}[e]+".js"}function c(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.e=function(e){var n=[],t={about:1,"chunk-03c229be":1,"chunk-10bbff56":1,"chunk-2dc35639":1,"chunk-35d7d228":1,"chunk-54cb55e5":1,"chunk-70e8bc69":1,"chunk-9c8ee19a":1,"chunk-dac2a49c":1,"chunk-df2448ca":1,"chunk-e69663dc":1,"chunk-1c9fe3c0":1};r[e]?n.push(r[e]):0!==r[e]&&t[e]&&n.push(r[e]=new Promise((function(n,t){for(var o="css/"+({about:"about"}[e]||e)+"."+{about:"e4784dea","chunk-03c229be":"5a13828d","chunk-0a483282":"31d6cfe0","chunk-0e3452c3":"31d6cfe0","chunk-10bbff56":"b34af10d","chunk-18aa50ba":"31d6cfe0","chunk-2d0bda08":"31d6cfe0","chunk-2d0ce7eb":"31d6cfe0","chunk-2d0cebfb":"31d6cfe0","chunk-2d21ed27":"31d6cfe0","chunk-2dc35639":"227ac777","chunk-35d7d228":"d6d3c5d7","chunk-360c663a":"31d6cfe0","chunk-54cb55e5":"f246d409","chunk-70e8bc69":"369248b8","chunk-9c8ee19a":"84a2c1b8","chunk-dac2a49c":"9079bd96","chunk-df2448ca":"1bbfc5b1","chunk-e69663dc":"77b84867","chunk-10c1dfcb":"31d6cfe0","chunk-17a2a7ca":"31d6cfe0","chunk-1c9fe3c0":"c5af2066","chunk-2d0ab85d":"31d6cfe0","chunk-2d0ba6b9":"31d6cfe0","chunk-2d0d7215":"31d6cfe0","chunk-2d0dde0c":"31d6cfe0","chunk-2d0de6e4":"31d6cfe0","chunk-2d207805":"31d6cfe0","chunk-2d213ec7":"31d6cfe0","chunk-2d2183ee":"31d6cfe0","chunk-2d21eebb":"31d6cfe0","chunk-2d222176":"31d6cfe0","chunk-2da9c6f6":"31d6cfe0","chunk-3d6dbb4c":"31d6cfe0","chunk-4140649c":"31d6cfe0","chunk-4419e8a6":"31d6cfe0","chunk-465a8008":"31d6cfe0","chunk-4c1d6c2a":"31d6cfe0","chunk-52664264":"31d6cfe0","chunk-6461589e":"31d6cfe0","chunk-7399fa48":"31d6cfe0","chunk-750c4a2b":"31d6cfe0","chunk-995d13ee":"31d6cfe0","chunk-acf006bc":"31d6cfe0","chunk-f4618fe0":"31d6cfe0","chunk-fbd22abe":"31d6cfe0","chunk-2d0b2b24":"31d6cfe0","chunk-2d0c7944":"31d6cfe0","chunk-2d0e6864":"31d6cfe0","chunk-6e2503b6":"31d6cfe0"}[e]+".css",i=c.p+o,a=document.getElementsByTagName("link"),s=0;s<a.length;s++){var p=a[s],m=p.getAttribute("data-href")||p.getAttribute("href");if("stylesheet"===p.rel&&(m===o||m===i))return n()}var f=document.getElementsByTagName("style");for(s=0;s<f.length;s++){p=f[s],m=p.getAttribute("data-href");if(m===o||m===i)return n()}var d=document.createElement("link");d.rel="stylesheet",d.type="text/css",d.onload=n,d.onerror=function(n){var o=n&&n.target&&n.target.src||i,a=new Error("Loading CSS chunk "+e+" failed.\n("+o+")");a.code="CSS_CHUNK_LOAD_FAILED",a.request=o,delete r[e],d.parentNode.removeChild(d),t(a)},d.href=i;var l=document.getElementsByTagName("head")[0];l.appendChild(d)})).then((function(){r[e]=0})));var o=i[e];if(0!==o)if(o)n.push(o[2]);else{var a=new Promise((function(n,t){o=i[e]=[n,t]}));n.push(o[2]=a);var p,m=document.createElement("script");m.charset="utf-8",m.timeout=120,c.nc&&m.setAttribute("nonce",c.nc),m.src=s(e);var f=new Error;p=function(n){m.onerror=m.onload=null,clearTimeout(d);var t=i[e];if(0!==t){if(t){var o=n&&("load"===n.type?"missing":n.type),r=n&&n.target&&n.target.src;f.message="Loading chunk "+e+" failed.\n("+o+": "+r+")",f.name="ChunkLoadError",f.type=o,f.request=r,t[1](f)}i[e]=void 0}};var d=setTimeout((function(){p({type:"timeout",target:m})}),12e4);m.onerror=m.onload=p,document.head.appendChild(m)}return Promise.all(n)},c.m=e,c.c=o,c.d=function(e,n,t){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},c.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)c.d(t,o,function(n){return e[n]}.bind(null,o));return t},c.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return c.d(n,"a",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p="/vnf-designer/",c.oe=function(e){throw console.error(e),e};var p=window["webpackJsonp"]=window["webpackJsonp"]||[],m=p.push.bind(p);p.push=n,p=p.slice();for(var f=0;f<p.length;f++)n(p[f]);var d=m;a.push([0,"chunk-vendors"]),t()})({0:function(e,n,t){e.exports=t("56d7")},"034f":function(e,n,t){"use strict";var o=t("85ec"),r=t.n(o);r.a},"0c89":function(e,n,t){},"121f":function(e,n,t){"use strict";var o=t("6131"),r=t.n(o);r.a},"56d7":function(e,n,t){"use strict";t.r(n);var o=t("2b0e"),r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},i=[],a=(t("034f"),t("2877")),s={},c=Object(a["a"])(s,r,i,!1,null,null,null),p=c.exports,m=t("8c4f"),f=t("bb51");o["a"].use(m["a"]);const d=[{path:"/",name:"Home",component:f["default"]},{path:"/docs",name:"Docs",component:function(){return t.e("about").then(t.bind(null,"eba1"))}}],l=new m["a"]({base:"/vnf-designer/",routes:d});var u=l,v=t("2f62");o["a"].use(v["a"]);var h=new v["a"].Store({state:{},mutations:{},actions:{},modules:{}});o["a"].config.productionTip=!1,new o["a"]({router:u,store:h,render:function(e){return e(p)}}).$mount("#app")},6131:function(e,n,t){},"6f51":function(e,n,t){"use strict";var o=t("bc77"),r=t.n(o);r.a},"81ad":function(e,n,t){"use strict";t.r(n);var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("AppTopbar",{attrs:{model:e.model,view:e.view}}),t("AppSidebarContent",{attrs:{model:e.model,view:e.view}}),t("AppContent",{attrs:{model:e.model,current:e.current,target:e.target,view:e.view,templates:e.templates}}),""!==e.view.modal?t("modal",{attrs:{view:e.view}}):e._e()],1)},r=[],i=t("8c91"),a=t("c082"),s=t("b517"),c=t("c505"),p=t("a79f"),m=t("9acf"),f={Canonical:'---\nschema:     {{schema}}\nvnf:        {{vnf}}\nversion:    {{version}}\ntenant:\n  name:          "{{tenant.name}}"\n  prefix:        "{{tenant.prefix}}"\n  auth:\n    username:    "{{tenant.auth.username}}"\n    password:    "{{tenant.auth.password}}"\n    proxy:       "{{tenant.auth.proxy}}"\n    url:         "{{tenant.auth.url}}"\n{% if tenant.auth.cert == "" %}\n    cert:        ""\n{% else %}\n    cert:        |\n      {{tenant.auth.cert | indent(6, false) }}\n{% endif %}\n    region:      "{{tenant.auth.region}}"\n    vol_api:     "{{tenant.auth.vol_api}}"\n    plugin:      "{{tenant.auth.plugin}}"\n{% if tenant.service %}{% if tenant.service.network != "" %}\n  service:\n    network:     "{{tenant.service.network}}"\n    cidr:        "{{tenant.service.cidr}}"\n    gateway:     "{{tenant.service.gateway}}"\n    proxy:       "{{tenant.service.proxy}}"\n    port:        "{{tenant.service.port}}"\n{% endif %}{% endif%}\n  jumphost:      "{{tenant.jumphost}}"\n  proxy:\n    http:        "{{tenant.proxy.http}}"\n    https:       "{{tenant.proxy.https}}"\nflavors:\n{% for flavor in flavors %}\n  - uuid:    "{{flavor.uuid}}"\n    name:    "{{flavor.name}}"\n    vcpu:    {{flavor.vcpu}}\n    ram:     {{flavor.ram}}\n    disk:    {{flavor.disk}}\n    public:  "{{flavor.public}}"\n{% if flavor.special|length == 0 %}\n    special: []\n{% endif -%}\n{% if flavor.special|length >  0 %}\n    special:\n{% endif -%}\n{% for special in flavor.special %}\n      - { key: "{{special.key}}", value: "{{special.value}}" }\n{% endfor %}\n{% endfor %}\nimages:\n{% for image in images %}\n  - { uuid: "{{image.uuid}}", name: "{{image.name}}", version: "{{image.version}}", format: "{{image.format}}", container: "{{image.container}}", disk: "{{image.disk}}", size: "{{image.size}}", checksum: "{{image.checksum}}", url: "{{image.url}}", special: "{{image.special}}" }\n{% endfor %}\nnetworks:\n{% for network in networks%}\n  - uuid:      "{{network.uuid}}"\n    name:      "{{network.name}}"\n    external:  "{{network.external}}"\n    ipv4:      "{{network.ipv4}}"\n    ipv4gw:    "{{network.ipv4gw}}"\n    ipv4start: "{{network.ipv4start}}"\n    ipv4end:   "{{network.ipv4end}}"\n    ipv6:      "{{network.ipv6}}"\n    ipv6gw:    "{{network.ipv6gw}}"\n    ipv6start: "{{network.ipv6start}}"\n    ipv6end:   "{{network.ipv6end}}"\n    route:     "{{network.route}}"\n    export:    "{{network.export}}"\n    import:    "{{network.import}}"\n    special:   "{{network.special}}"\n{% endfor %}\ncomponents:\n{% for component in components %}\n  - uuid:         "{{component.uuid}}"\n    name:         "{{component.name}}"\n    user:         "{{component.user}}"\n    placement:    "{{component.placement}}"\n    flavor:       "{{component.flavor}}"\n    image:        "{{component.image}}"\n    min:          {{component.min}}\n    size:         {{component.size}}\n    max:          {{component.max}}\n{% if component.volumes|length == 0 %}\n    volumes:      []\n{% endif -%}\n{% if component.volumes|length >  0 %}\n    volumes:\n{% endif -%}\n{% for volume in component.volumes %}\n      - { name: "{{volume.name}}", size: {{volume.size}}, type: "{{volume.type}}", attributes: "{{volume.attributes}}" }\n{% endfor %}\n{% if component.componentInterfaces|length == 0 %}\n    componentInterfaces:   []\n{% endif -%}\n{% if component.componentInterfaces|length >  0 %}\n    componentInterfaces:\n{% endif -%}\n{% for componentInterface in component.componentInterfaces %}\n      - { network: "{{componentInterface.network}}", attributes: "{{componentInterface.attributes}}" }\n{% endfor %}\n{% if component.services|length == 0 %}\n    services:     []\n{% endif -%}\n{% if component.services|length >  0 %}\n    services:\n{% endif -%}\n{% for service in component.services %}\n      - { name: "{{service.name}}", network: "{{service.network}}", protocol: "{{service.protocol}}", range: "{{service.range}}" }\n{% endfor %}\n{% if component.dependencies|length == 0 %}\n    dependencies: []\n{% endif -%}\n{% if component.dependencies|length >  0 %}\n    dependencies:\n{% endif -%}\n{% for dependency in component.dependencies %}\n      - { component: "{{dependency.component}}", service: "{{dependency.service}}", network: "{{dependency.network}}" }\n{% endfor %}\n{% if component.userdata == "" %}\n    userdata:     ""\n{% endif -%}\n{% if component.userdata != "" %}\n    userdata: |\n      {{ component.userdata | indent(6) | safe }}\n{% endif -%}\n\n{% endfor %}\n',"Communication Matrix":"From                |Network |To                  |Service   |Protocol|Port (range)    |Network\n{% for component1 in components %}{% for dependency in component1.dependencies %}\n{% for component2 in components %}{% if component2.name == dependency.component %}\n{% for service in component2.services %}{% if service.name == dependency.service %}\n{{(component1.name    + '                    ') | truncate(20,false,'') }}|{{(dependency.network + '        ') | truncate(8,false,'') }}|{{(component2.name + '                    ') | truncate(20,false,'') }}|{{(service.name + '          ') | truncate(10,false,'') }}|{{(service.protocol + '        ') | truncate(8,false,'')  }}|{{(service.range      + '                ') | truncate(16,false,'') }}|{{(service.network    + '      ') | truncate(6,false,'')  }}\n{% endif %}{% endfor %}\n{% endif %}{% endfor %}\n{% endfor %}{% endfor %}",Environment:'---\n# file: environment.yml\n\n# ----- environment variables -----\nenv_vars:\n  OS_TENANT_NAME:             "{{tenant.name}}"\n  OS_PROJECT_NAME:            "{{tenant.name}}"\n  OS_USERNAME:                "{{tenant.auth.username}}"\n  OS_PASSWORD:                "{{tenant.auth.password}}"\n  OS_API_PROXY:               "{{tenant.auth.proxy}}"\n  OS_AUTH_URL:                "{{tenant.auth.url}}"\n  OS_CACERT:                  "{{tenant.auth.cert}}"\n  OS_REGION_NAME:             "{{tenant.auth.region}}"\n  OS_VOLUME_API_VERSION:      "{{tenant.auth.vol_api}}"\n  OS_AUTH_PLUGIN:             "{{tenant.auth.plugin}}"\n\n  SERVICE_NETWORK:            "{{tenant.service.network}}"\n  SERVICE_CIDR:               "{{tenant.service.cidr}}"\n  SERVICE_GATEWAY:            "{{tenant.service.gateway}}"\n  PROXY_ADDRESS:              "{{tenant.service.proxy}}"\n  PROXY_PORT:                 "{{tenant.service.port}}"\n  JUMPHOST:                   "{{tenant.jumphost}}"\n{% if tenant.proxy.http %}{% if tenant.proxy.http != \'\' %}\n  http_proxy:                 "{{tenant.proxy.http}}"\n{% endif %}{% endif %}\n{% if tenant.proxy.https %}{% if tenant.proxy.https != \'\' %}\n  https_proxy:                "{{tenant.proxy.https}}"\n{% endif %}{% endif %}',"Networks (create)":'#!/usr/bin/env ansible-playbook\n---\n- name: Create networks\n  hosts: localhost\n  connection: local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: "{{ \'{{ansible_playbook_python}}\' }}"\n  vars_files:\n    - ../../input/environment.yml\n  environment: "{{ \'{{env_vars}}\' }}"\n  tasks:\n{% for network in networks %}{% if network.external != "true" %}\n  - name: Create {{network.name}} network\n    os_network:\n      state:          present\n      name:           {{tenant.prefix}}{{network.name}}\n      validate_certs: no\n\n  - name: Create {{network.name}} subnet\n    os_subnet:\n      state:                 present\n      network_name:          {{tenant.prefix}}{{network.name}}\n      name:                  {{tenant.prefix}}{{network.name}}_subnet\n      cidr:                  {{network.ipv4}}\n      allocation_pool_start: {{network.ipv4start}}\n      allocation_pool_end:   {{network.ipv4end}}\n      validate_certs:        no\n\n{% if network.ipv6 != "" %}\n  - name: Create {{network.name}} subnet2\n    os_subnet:\n      state:                 present\n      network_name:          {{tenant.prefix}}{{network.name}}\n      name:                  {{tenant.prefix}}{{network.name}}_subnet2\n      cidr:                  {{network.ipv6}}\n      allocation_pool_start: {{network.ipv6start}}\n      allocation_pool_end:   {{network.ipv6end}}\n      validate_certs:        no\n\n{% endif %}\n{% endif %}{% endfor %}',"Networks (delete)":'#!/usr/bin/env ansible-playbook\n---\n- name: Delete networks\n  hosts:        localhost\n  connection:   local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: "{{ \'{{ansible_playbook_python}}\' }}"\n  vars_files:\n    - ../../input/environment.yml\n  environment: "{{ \'{{env_vars}}\' }}"\n  tasks:\n    - name: Delete subnets\n      os_subnet:\n        state:          absent\n        name:           "{{ \'{{item}}\' }}_subnet"\n        validate_certs: no\n      loop:\n{% for network in networks %}{% if network.external != "true" %}\n      - {{tenant.prefix}}{{network.name}}\n{% endif %}{% endfor %}\n\n    - name: Delete networks\n      os_network:\n        state:          absent\n        name:           "{{ \'{{item}}\' }}"\n        validate_certs: no\n      loop:\n{% for network in networks %}{% if network.external != "true" %}\n      - {{tenant.prefix}}{{network.name}}\n{% endif %}{% endfor %}',"Networks (status)":"#!/usr/bin/env ansible-playbook\n---\n- name: Create network inventory of the tenant\n  hosts:        localhost\n  connection:   local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: \"{{ '{{ansible_playbook_python}}' }}\"\n  vars_files:\n    - ../../input/environment.yml\n  environment: \"{{ '{{env_vars}}' }}\"\n  tasks:\n    - name: Define networks\n      set_fact:\n        network_names:\n{% for network in networks %}\n          - {{tenant.prefix}}{{network.name}}\n{% endfor %}\n\n    - name: Collect network information\n      os_networks_facts:\n         validate_certs: no\n      register: networks\n      ignore_errors: yes\n\n    - name: Collect subnet information\n      os_subnets_facts:\n         validate_certs: no\n      register: subnets\n      ignore_errors: yes\n\n    - name: Create report 'networks.yml'\n      template:\n        src:  ../templates/networks.tmpl\n        dest: ../../output/networks.yml\n      delegate_to:  localhost\n      changed_when: false","Servers (status)":"#!/usr/bin/env ansible-playbook\n---\n- name: Create server inventory of the tenant\n  hosts:        localhost\n  connection:   local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: \"{{ '{{ansible_playbook_python}}' }}\"\n  vars_files:\n    - ../../input/environment.yml\n  environment: \"{{ '{{env_vars}}' }}\"\n  tasks:\n    - name: Define prefix\n      set_fact:\n        prefix: \"{{tenant.prefix}}\"\n\n    - name: Define jumphost\n      set_fact:\n        jumphost: {{tenant.jumphost}}\n\n    - name: Define servers\n      set_fact:\n        server_names:\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}\n{% if component.max == 1 %}\n          - {{tenant.prefix}}{{component.name}}\n{% else %}\n{% for server_index in range(1,1+component.max,1) %}\n          - {{tenant.prefix}}{{component.name}}-{{server_index}}\n{% endfor %}\n{% endif %}\n{% endif %}{% endif %}{% endfor %}\n\n    - name: Define ssh servers\n      set_fact:\n        ssh_server_names:\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}{% if component.user != '' %}\n{% if component.max == 1 %}\n          - {{tenant.prefix}}{{component.name}}\n{% else %}\n{% for server_index in range(1,1+component.max,1) %}\n          - {{tenant.prefix}}{{component.name}}-{{server_index}}\n{% endfor %}\n{% endif %}\n{% endif %}{% endif %}{% endif %}{% endfor %}\n\n\n    - name: Define ports\n      set_fact:\n        port_names:\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}\n{% for componentInterface in component.componentInterfaces %}\n{% if component.max == 1 %}\n          - {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}\n{% else %}\n{% for server_index in range(1,component.max,1) %}\n          - {{tenant.prefix}}{{component.name}}-{{server_index}}_{{tenant.prefix}}{{componentInterface.network}}\n{% endfor %}\n{% endif %}\n{% endfor %}\n{% endif %}{% endif %}{% endfor %}\n\n    - name: Collect server information\n      os_server_facts:\n         validate_certs: no\n      register: servers\n      ignore_errors: yes\n\n    - name: Collect port information\n      os_port_facts:\n         validate_certs: no\n      register: ports\n      ignore_errors: yes\n\n    - name: Create report 'servers.yml'\n      template:\n        src:  ../templates/servers.tmpl\n        dest: ../../output/servers.yml\n      delegate_to:  localhost\n      changed_when: false\n\n    - name: Create ansible ssh config\n      template:\n        src:  ../templates/config\n        dest: ../../output/config\n      delegate_to:  localhost\n      changed_when: false\n\n    - name: Create ansible inventory\n      template:\n        src:  ../templates/inventory\n        dest: ../../output/inventory\n      delegate_to:  localhost\n      changed_when: false","Servers (define security)":"{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}\n----- {{tenant.prefix}}{{component.name}} -----\n#!/usr/bin/env ansible-playbook\n---\n- name: Create security groups for ports of server {{component.name}}\n  hosts: localhost\n  connection: local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: \"{{ '{{ansible_playbook_python}}' }}\"\n  vars_files:\n    - ../../../input/environment.yml\n  environment: \"{{ '{{env_vars}}' }}\"\n  tasks:\n\n{% for componentInterface in component.componentInterfaces %}\n  # ----- security group for {{tenant.prefix}}{{component.name}} componentInterface {{tenant.prefix}}{{componentInterface.network}} -----\n  - name: Create {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}} security group\n    os_security_group:\n      state:          present\n      name:           {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}\n      description:    Security group for the {{tenant.prefix}}{{component.name}} {{tenant.prefix}}{{componentInterface.network}} componentInterface.\n      validate_certs: no\n    register: secgroup\n\n  # ----- reset all ingress security rules for {{tenant.prefix}}{{component.name}} componentInterface {{tenant.prefix}}{{componentInterface.network}} -----\n  - name: Delete all ingress {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}} security group rules\n    os_security_group_rule:\n      state:            absent\n      security_group:   {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}\n      protocol:         \"{{ '{{item.protocol}}' }}\"\n      port_range_min:   \"{{ '{{item.port_range_min}}' }}\"\n      port_range_max:   \"{{ '{{item.port_range_max}}' }}\"\n      remote_ip_prefix: \"{{ '{{item.remote_ip_prefix}}' }}\"\n      direction:        ingress\n      validate_certs:   no\n    ignore_errors:      yes\n    loop: \"{{ '{{secgroup.secgroup.security_group_rules}}' }}\"\n    when: item.direction == \"ingress\"\n\n  # ----- security group rules for {{tenant.prefix}}{{component.name}} componentInterface {{tenant.prefix}}{{componentInterface.network}} -----\n  - name: Create {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}} security group rules\n    os_security_group_rule:\n      state:            present\n      security_group:   {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}\n      protocol:         \"{{ '{{item.protocol}}' }}\"\n      port_range_min:   \"{{ '{{item.port_range_min}}' }}\"\n      port_range_max:   \"{{ '{{item.port_range_max}}' }}\"\n      remote_ip_prefix: \"{{ '{{item.remote_ip_prefix}}' }}\"\n      direction:        ingress\n      validate_certs:   no\n    ignore_errors:      yes\n    loop:\n    - {protocol: icmp, port_range_min: 0, port_range_max: 255, remote_ip_prefix: 0.0.0.0/0}\n{% for service in component.services %}{% if componentInterface.network == service.network %}\n{% for network in networks %}{% if componentInterface.network == network.name %}\n    - {protocol: {{service.protocol}}, port_range_min: {{service.range | portmin }}, port_range_max: {{service.range | portmax }}, remote_ip_prefix: {{network.ipv4}} }\n{% endif %}{% endfor %}\n{% endif %}{% endfor %}\n{% for service in component.services %}{% if componentInterface.network == service.network %}\n{% for component2 in components %}{% if component2.placement != 'ROUTER' %}\n{% for dependency in component2.dependencies %}{% if dependency.component == component.name %}{% if dependency.service == service.name %}\n{% for network2 in networks %}{% if dependency.network == network2.name %}\n    - {protocol: {{service.protocol}}, port_range_min: {{service.range | portmin }}, port_range_max: {{service.range | portmax }}, remote_ip_prefix: {{network2.ipv4}} }\n{% endif %}{% endfor %}\n{% endif %}{% endif %}{% endfor %}\n{% endif %}{% endfor %}\n{% endif %}{% endfor %}\n\n{% endfor %}\n{% endif %}{% endif %}{% endfor %}","Servers (undefine security)":"{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}\n----- {{tenant.prefix}}{{component.name}} -----\n#!/usr/bin/env ansible-playbook\n---\n- name: Delete security groups for ports of server {{tenant.prefix}}{{component.name}}\n  hosts: localhost\n  connection: local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: \"{{ '{{ansible_playbook_python}}' }}\"\n  vars_files:\n    - ../../../input/environment.yml\n  environment: \"{{ '{{env_vars}}' }}\"\n  tasks:\n\n{% for componentInterface in component.componentInterfaces %}\n  # ----- security group for {{component.name}} componentInterface {{tenant.prefix}}{{componentInterface.network}} -----\n  - name: Delete {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}} security group\n    os_security_group:\n      state:          absent\n      name:           {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}\n      description:    Security group for the {{tenant.prefix}}{{component.name}} {{tenant.prefix}}{{componentInterface.network}} componentInterface.\n      validate_certs: no\n\n{% endfor %}\n{% endif %}{% endif %}{% endfor %}","Servers (create)":'{% for component in components %}{% if component.placement != \'OTHER\' %}{% if component.placement != \'ROUTER\' %}{% for index in range(component.max) %}{% if component.max == 1 %}{% set component_name = component.name %}{% else %}{% set component_name = component.name + "-" + (index+1) %}{% endif %}\n----- {{tenant.prefix}}{{component_name}} -----\n#!/usr/bin/env ansible-playbook\n---\n- name: Create server {{tenant.prefix}}{{component_name}}\n  hosts: localhost\n  connection: local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: "{{ \'{{ansible_playbook_python}}\' }}"\n  vars_files:\n    - ../../../input/environment.yml\n  environment: "{{ \'{{env_vars}}\' }}"\n  tasks:\n{% for componentInterface in component.componentInterfaces %}\n  # ----- {{componentInterface.network}} port for {{tenant.prefix}}{{component_name}} -----\n  - name: Create {{componentInterface.network}} port for {{tenant.prefix}}{{component_name}}\n    os_port:\n      state:          present\n      name:           "{{tenant.prefix}}{{component_name}}_{{tenant.prefix}}{{componentInterface.network}}"\n      network:        "{{tenant.prefix}}{{componentInterface.network}}"\n      validate_certs: no\n      security_groups:\n      - "{{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}"\n{% if componentInterface.attributes|allowed|length > 0 %}\n      allowed_address_pairs:\n{% for allowed in componentInterface.attributes|allowed %}\n      - ip_address: {{allowed}}\n{% endfor %}{% endif %}\n{% if componentInterface.attributes|fixed|length > 0 %}\n      fixed_ips:\n{% for fixed in componentInterface.attributes|fixed %}\n      - ip_address: {{fixed}}\n{% endfor %}{% endif %}\n\n{% endfor %}\n\n  # ----- {{component_name}} virtual machine -----\n  - name: Create virtual machine for {{component_name}} server\n    os_server:\n      state:          present\n      name:           {{tenant.prefix}}{{component_name}}\n      flavor:         "{{component.flavor}}"\n      image:          "{{component.image}}"\n      key_name:       fiveg_key\n      config_drive:   yes\n      auto_ip:        no\n      timeout:        600\n      validate_certs: no\n      nics:\n{% for componentInterface in component.componentInterfaces %}\n        - port-name: {{tenant.prefix}}{{component_name}}_{{tenant.prefix}}{{componentInterface.network}}\n{% endfor %}\n      meta:\n       hostname: {{tenant.prefix}}{{component_name}}\n{% if component.userdata != "" %}\n      userdata: |\n        {{ component.userdata | indent(8) | safe }}\n{% endif %}\n\n{% if component.name == "jumphost" %}{% if tenant.jumphost != "" %}\n  # ----- floating IP for jumphost -----\n  - name: Determine {{tenant.prefix}}jumphost_{{tenant.prefix}}oam port information\n    os_port_facts:\n      port:           "{{tenant.prefix}}jumphost_{{tenant.prefix}}oam"\n      validate_certs: no\n    register: jumphost_oam_facts\n\n  - name: Assign floating IP to jumphost\n    os_floating_ip:\n      state:               present\n      server:              {{tenant.prefix}}jumphost\n      floating_ip_address: "{{tenant.jumphost}}"\n      fixed_address:       "{{ \'{{\' }} jumphost_oam_facts.ansible_facts.openstack_ports[0].fixed_ips[0].ip_address {{ \'}}\' }}"\n      validate_certs:      no\n\n{% endif %}{% endif %}\n\n{% for volume in component.volumes %}\n  # ----- {{volume.name}} volume for {{tenant.prefix}}{{component_name}} -----\n  - name: Create {{volume.name}} volume for {{tenant.prefix}}{{component_name}}\n    os_volume:\n      state:          present\n      name:           "{{tenant.prefix}}{{component_name}}_{{volume.name}}"\n      size:           {{volume.size}}\n      display_name:   "{{volume.name}} volume for {{tenant.prefix}}{{component_name}}"\n      validate_certs: no\n\n  - name: Attach volume {{volume.name}} to {{tenant.prefix}}{{component_name}}\n    os_server_volume:\n      state:          present\n      server:         "{{tenant.prefix}}{{component_name}}"\n      volume:         "{{tenant.prefix}}{{component_name}}_{{volume.name}}"\n      validate_certs: no\n\n{% endfor %}\n\n{% endfor %}{% endif %}{% endif %}{% endfor %}',"Servers (delete)":'{% for component in components %}{% if component.placement != \'OTHER\' %}{% if component.placement != \'ROUTER\' %}{% for index in range(component.max) %}{% if component.max == 1 %}{% set component_name = component.name %}{% else %}{% set component_name = component.name + "-" + (index+1) %}{% endif %}\n----- {{tenant.prefix}}{{component_name}} -----\n#!/usr/bin/env ansible-playbook\n---\n- name: Delete server {{component_name}}\n  hosts: localhost\n  connection: local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: "{{ \'{{ansible_playbook_python}}\' }}"\n  vars_files:\n    - ../../../input/environment.yml\n  environment: "{{ \'{{env_vars}}\' }}"\n  tasks:\n{% for componentInterface in component.componentInterfaces %}\n  # ----- {{tenant.prefix}}{{componentInterface.network}} port for {{tenant.prefix}}{{component_name}} -----\n  - name: Delete {{tenant.prefix}}{{componentInterface.network}} port for {{tenant.prefix}}{{component_name}}\n    os_port:\n      state:          absent\n      name:           "{{tenant.prefix}}{{component_name}}_{{tenant.prefix}}{{componentInterface.network}}"\n      network:        "{{tenant.prefix}}{{componentInterface.network}}"\n      validate_certs: no\n\n{% endfor %}\n\n  # ----- {{tenant.prefix}}{{component_name}} virtual machine -----\n  - name: Delete virtual machine for {{tenant.prefix}}{{component_name}} server\n    os_server:\n      state:          absent\n      name:           {{tenant.prefix}}{{component_name}}\n      validate_certs: no\n\n{% for volume in component.volumes %}\n  # ----- {{volume.name}} volume for {{tenant.prefix}}{{component_name}} -----\n  - name: Delete {{volume.name}} volume for {{tenant.prefix}}{{component_name}}\n    os_volume:\n      state:          absent\n      name:           "{{tenant.prefix}}{{component_name}}_{{volume.name}}"\n      validate_certs: no\n\n{% endfor %}\n\n{% endfor %}{% endif %}{% endif %}{% endfor %}',"Servers (ssh)":"{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}{% if component.user != '' %}{% for index in range(component.max) %}{% if component.max == 1 %}{% set component_name = component.name %}{% else %}{% set component_name = component.name + \"-\" + (index+1) %}{% endif %}\n----- {{tenant.prefix}}{{component_name}} -----\n#!/usr/bin/env ansible-playbook\n---\n- name: Determine index of server\n  hosts: localhost\n  gather_facts: false\n  tasks:\n- name: Update ssh keys for server '{{tenant.prefix}}{{component_name}}'\n  hosts: \"{{component_name}}\"\n  gather_facts: false\n  tasks:\n    - name: Update authorized keys file for server '{{tenant.prefix}}{{component_name}}'\n      authorized_key:\n        user: '{{ component.user }}'\n        key: \"{{ '{{ item }}' }}\"\n        state: present\n        exclusive: True\n      become: yes\n      with_file:\n        - ../../../input/authorized_keys\n{% endfor %}{% endif %}{% endif %}{% endif %}{% endfor %}","Router (create)":"{% for component in components %}{% if component.placement == 'ROUTER' %}\n----- {{tenant.prefix}}{{component.name}} -----\n#!/usr/bin/env ansible-playbook\n---\n- name: Create router {{component.name}}\n  hosts: localhost\n  connection: local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: \"{{ '{{ansible_playbook_python}}' }}\"\n  vars_files:\n    - ../../../input/environment.yml\n  environment: \"{{ '{{env_vars}}' }}\"\n  tasks:\n\n  # ----- {{tenant.prefix}}{{component.name}} router -----\n  - name: Create router {{tenant.prefix}}{{component.name}}\n    os_router:\n      state:          present\n      name:           {{tenant.prefix}}{{component.name}}\n      validate_certs: no\n      componentInterface:\n{% for componentInterface in component.componentInterfaces %}\n      - subnet: {{tenant.prefix}}{{componentInterface.network}}_subnet\n{% endfor %}\n\n\n{% endif %}{% endfor %}","Router (delete)":"{% for component in components %}{% if component.placement == 'ROUTER' %}\n----- {{tenant.prefix}}{{component.name}} -----\n#!/usr/bin/env ansible-playbook\n---\n- name: Create router {{component.name}}\n  hosts: localhost\n  connection: local\n  gather_facts: false\n  vars:\n    ansible_python_interpreter: \"{{ '{{ansible_playbook_python}}' }}\"\n  vars_files:\n    - ../../../input/environment.yml\n  environment: \"{{ '{{env_vars}}' }}\"\n  tasks:\n\n  # ----- {{tenant.prefix}}{{component.name}} router -----\n  - name: Delete router {{tenant.prefix}}{{component.name}}\n    os_router:\n      state:          absent\n      name:           {{tenant.prefix}}{{component.name}}\n      validate_certs: no\n      componentInterface:\n{% for componentInterface in component.componentInterfaces %}\n      - subnet: {{tenant.prefix}}{{componentInterface.network}}_subnet\n{% endfor %}\n\n\n{% endif %}{% endfor %}",openrc:"\nexport OS_TENANT_NAME={{tenant.name}}\nexport OS_PROJECT_NAME={{tenant.name}}\nexport OS_USERNAME={{tenant.auth.username}}\nexport OS_PASSWORD={{tenant.auth.password}}\nexport OS_AUTH_URL={{tenant.auth.url}}\nexport OS_CACERT=./openstack.crt","openstack.crt":"\n{{tenant.auth.cert}}\n",ssh:"#!/usr/bin/env ansible-playbook\n---\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}{% if component.user != '' %}\n{% if component.max == 1 %}\n- name: Update ssh keys for server {{tenant.prefix}}{{component.name}}\n  hosts: '{{tenant.prefix}}{{component.name}}'\n  gather_facts: false\n  tasks:\n    - name: Update authorized keys file for server {{tenant.prefix}}{{component.name}}\n      authorized_key:\n        user: '{{ component.user }}'\n        key: \"{{ '{{ item }}' }}\"\n        state: present\n        exclusive: True\n      become: yes\n      with_file:\n        - ../../input/authorized_keys\n\n{% else %}\n{% for server_index in range(1,1+component.max,1) %}\n- name: Update ssh keys for server {{tenant.prefix}}{{component.name}}-{{server_index}}\n  hosts: '{{tenant.prefix}}{{component.name}}-{{server_index}}'\n  gather_facts: false\n  tasks:\n    - name: Update authorized keys file for server {{tenant.prefix}}{{component.name}}-{{server_index}}\n      authorized_key:\n        user: '{{ component.user }}'\n        key: \"{{ '{{ item }}' }}\"\n        state: present\n        exclusive: True\n      become: yes\n      with_file:\n        - ../../input/authorized_keys\n\n{% endfor %}\n{% endif %}\n{% endif %}{% endif %}{% endif %}{% endfor %}",Prequisites:"\n{% set instances, volumes, vcpu, ram, disk = 0 %}\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}\n{% set instances = instances + 1 %}\n{% for flavor in flavors %}{% if component.flavor == flavor.name %}\n{% set vcpu = vcpu + flavor.vcpu %}\n{% set ram  = ram  + flavor.ram * 1024 %}\n{% set disk = disk + flavor.disk %}\n{% endif %}{% endfor %}\n{% for volume in component.volumes %}\n{% set volumes = volumes + 1 %}\n{% set disk    = disk  + volume.size * 1024 %}\n{% endfor %}\n{% endif %}{% endif %}{% endfor %}\nPrequisites:\n============\n\nTenant: {{tenant.name}}\n\nName of ssh-key: fiveg_key\n\nQuota:\n------\n\n* Virtual machines:     {{instances}}\n* Volumes:              {{volumes}}\n* Virtual CPUs:         {{vcpu}}\n* Random Access Memory: {{ram}} [MB]\n* Disk Storage:         {{disk}} [MB]\n\nFlavors:\n--------\n{% for flavor in flavors %}\n{% set found = false %}\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}\n{% if found == false %}{% if component.flavor == flavor.name %}\n* {{(flavor.name + \"                    \") | truncate(20, true, \"\") }}: {{flavor.vcpu}} vCPUs / {{flavor.ram}} [MB ram] / {{flavor.disk}} [GB disk]\n{% set found = true %}\n{% endif %}{% endif %}\n{% endif %}{% endif %}{% endfor %}\n{% endfor %}\n\nImages:\n-------\n{% for image, components in components | groupby(\"image\") %}\n* {{(image + \"                               \") | truncate(32, true, \"\") }}: {% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %} {{ component.name }}{% endif %}{% endif %}{% endfor %}\n\n{% endfor %}\n",readme:"\nREADME\n======\n\nVNF:     {{vnf}}\nVersion: {{version}}\nTenant:  {{tenant.name}}\nPrefix:  {{tenant.prefix}}\n\nPrequisites\n-----------\n- access to OpenStack API\n- ansible installed\n- openstack client installed\n- input directory (next to the directory containing this readme):\n  - id_rsa (private key for accessing the virtual machines)\n  - openstack.crt (certificate file of OpenStack API)\n  - authorized_keys (file with all public keys to be uploaded to VMs)\n\nPreparation\n-----------\n- source ./setup.sh\n\nUsage\n-----\n\ncreate and delete the whole infrastructure\ndetermine status of the whole infrastructure\ndistribute keys to all servers and\nconnct to a specific server\n- infrastructure_create.sh\n- infrastructure_delete.sh\n- infrastructure_status.sh\n- infrastructure_authorize.sh\n- infrastructure_connect.sh <server>\n\ncreate, delete and determine status of networks:\n- ./elements/networks/create.yml\n- ./elements/networks/delete.yml\n- ./elements/networks/status.yml\n\ncreate, delete security policies:\n- ./elements/servers/<server>/define_security.yml\n- ./elements/servers/<server>/undefine_security.yml\n\ncreate, delete and determine status of servers:\n- ./elements/servers/<server>/create.yml\n- ./elements/servers/<server>/delete.yml\n- ./elements/servers/status.yml\n\ndistribute ssh keys to servers:\n- ./elements/servers/<server>/ssh.yml\n",config:"\nHost jumphost\n  User         ubuntu\n  HostName     {{tenant.jumphost}}\n\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}{% if component.user != '' %}\n{{ \"{%\" }} for port in ports.ansible_facts.openstack_ports {{ \"%}{%\" }} if port.name == '{{tenant.prefix}}{{component.name}}_{{tenant.prefix}}oam' {{ \"%}\" }}\nHost {{component.name}}\n  User         {{component.user}}\n  ProxyCommand ssh -i ./input/id_rsa ubuntu@{{tenant.jumphost}} -W %h:%p\n  HostName     {{ \"{{\" }} port.fixed_ips | map(attribute='ip_address') | join(', ') {{ \"}}\" }}\n\n{{ \"{% endif %}{% endfor %}\" }}\n{% endif %}{% endif %}{% endif %}{% endfor %}\n\nHost *\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null\n  IdentityFile ./input/id_rsa","HEAT Networks":'\nheat_template_version: 2015-04-30\nresources:\n{% for network in networks %}{% if network.external != "true" %}\n  {{tenant.prefix}}{{network.name}}:\n    type: OS::Neutron::Net\n    properties:\n      name:                  "{{tenant.prefix}}{{network.name}}"\n      admin_state_up:        true\n      port_security_enabled: true\n      shared:                false\n\n{% if network.ipv4 != "" %}\n  {{tenant.prefix}}{{network.name}}_v4:\n    type: OS::Neutron::Subnet\n    properties:\n      name:              "{{tenant.prefix}}{{network.name}}_v4"\n      network:           { get_attr: [{{tenant.prefix}}{{network.name}}, name] }\n      cidr:              {{network.ipv4}}\n      ip_version:        4\n      allocation_pools: [{ "start": {{network.ipv4start}}, "end": {{network.ipv4end}} }]\n      gateway_ip:       {{network.ipv4gw}}\n      enable_dhcp:      true\n{% endif %}\n\n{% if network.ipv6 != "" %}\n  {{tenant.prefix}}{{network.name}}_v6:\n    type: OS::Neutron::Subnet\n    properties:\n      name:              "{{tenant.prefix}}{{network.name}}_v6"\n      network:           { get_attr: [{{tenant.prefix}}{{network.name}}, name] }\n      cidr:              {{network.ipv6}}\n      ip_version:        6\n      allocation_pools: [{ "start": {{network.ipv6start}}, "end": {{network.ipv6end}} }]\n      gateway_ip:       {{network.ipv6gw}}\n      enable_dhcp:      true\n{% endif %}{% endif %}{% endfor %}\n\n{% for component in components %}{% if component.placement == \'ROUTER\' %}\n  {{tenant.prefix}}{{component.name}}:\n     type: OS::Neutron::Router\n     properties:\n       name:           "{{tenant.prefix}}{{component.name}}"\n       admin_state_up: true\n\n{% for componentInterface in component.componentInterfaces %}{% for network in networks %}{% if network.name == componentInterface.network %}\n{% if network.ipv4 != "" %}\n  {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}:\n    type: OS::Neutron::RoutercomponentInterface\n    properties:\n      router: { get_attr: [{{tenant.prefix}}{{component.name}}, name] }\n      subnet: { get_attr: [{{tenant.prefix}}{{network.name}}_v4, name] }\n\n{% endif %}\n{% if network.ipv6 != "" %}\n  {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}:\n    type: OS::Neutron::RoutercomponentInterface\n    properties:\n      router: { get_attr: [{{tenant.prefix}}{{component.name}}, name] }\n      subnet: { get_attr: [{{tenant.prefix}}{{network.name}}_v6, name] }\n\n{% endif %}\n{% endif %}{% endfor %}{% endfor %}\n\n{% endif %}{% endfor %}',"HEAT Security":"\nheat_template_version: 2015-04-30\nresources:\n{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}\n{% for componentInterface in component.componentInterfaces %}\n  {{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      name:        \"{{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}\"\n      rules:\n        - {protocol: icmp, port_range_min: 0, port_range_max: 255,   remote_ip_prefix: 0.0.0.0/0}\n        - {protocol: tcp,  port_range_min: 0, port_range_max: 65535, remote_ip_prefix: 0.0.0.0/0}\n        - {protocol: udp,  port_range_min: 0, port_range_max: 65535, remote_ip_prefix: 0.0.0.0/0}\n{% for service in component.services %}{% if componentInterface.network == service.network %}\n{% for network in networks %}{% if componentInterface.network == network.name %}\n        - {protocol: {{service.protocol}}, port_range_min: {{service.range | portmin }}, port_range_max: {{service.range | portmax }}, remote_ip_prefix: {{network.ipv4}} }\n{% endif %}{% endfor %}\n{% endif %}{% endfor %}\n{% for service in component.services %}{% if componentInterface.network == service.network %}\n{% for component2 in components %}{% if component2.placement != 'ROUTER' %}\n{% for dependency in component2.dependencies %}{% if dependency.component == component.name %}{% if dependency.service == service.name %}\n{% for network2 in networks %}{% if dependency.network == network2.name %}\n        - {protocol: {{service.protocol}}, port_range_min: {{service.range | portmin }}, port_range_max: {{service.range | portmax }}, remote_ip_prefix: {{network2.ipv4}} }\n{% endif %}{% endfor %}\n{% endif %}{% endif %}{% endfor %}\n{% endif %}{% endfor %}\n{% endif %}{% endfor %}\n\n{% endfor %}\n{% endif %}{% endif %}{% endfor %}","HEAT Servers":"{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}{% for index in range(component.max) %}{% if component.max == 1 %}{% set component_name = component.name %}{% else %}{% set component_name = component.name + \"-\" + (index+1) %}{% endif %}\n----- {{tenant.prefix}}{{component_name}} -----\nheat_template_version: 2015-04-30\nresources:\n{% for componentInterface in component.componentInterfaces %}\n  # ----- Port: {{tenant.prefix}}{{componentInterface.network}} for {{tenant.prefix}}{{component_name}} -----\n  {{tenant.prefix}}{{component_name}}_{{tenant.prefix}}{{componentInterface.network}}:\n     type: OS::Neutron::Port\n     properties:\n       name:                  \"{{tenant.prefix}}{{component_name}}_{{tenant.prefix}}{{componentInterface.network}}\"\n       network:               \"{{tenant.prefix}}{{componentInterface.network}}\"\n       security_groups:       [ \"{{tenant.prefix}}{{component.name}}_{{tenant.prefix}}{{componentInterface.network}}\" ]\n       port_security_enabled: true\n       admin_state_up:        true\n{% if componentInterface.attributes|allowed|length > 0 %}\n       allowed_address_pairs:\n{% for allowed in componentInterface.attributes|allowed %}\n         - ip_address: {{allowed}}\n{% endfor %}{% endif %}\n{% if componentInterface.attributes|fixed|length > 0 %}\n       fixed_ips:\n{% for fixed in componentInterface.attributes|fixed %}\n         - ip_address: {{fixed}}\n{% endfor %}{% endif %}\n\n{% endfor %}\n\n{% for volume in component.volumes %}\n  # ----- Volume: {{volume.name}} volume for {{tenant.prefix}}{{component_name}} -----\n  {tenant.prefix}}{{component_name}}_{{volume.name}}:\n    type: OS::Cinder::Volume\n    properties:\n      name:           \"{{tenant.prefix}}{{component_name}}_{{volume.name}}\"\n      size:           {{volume.size}}\n{% endfor %}\n\n  # ----- Server: {{tenant.prefix}}{{component_name}} -----\n  {{component_name}}:\n    type: OS::Nova::Server\n    properties:\n      name:         \"{{component_name}}\"\n      flavor:       \"{{component.flavor}}\"\n      image:        \"{{component.image}}\"\n      key_name:     \"admin\"\n      config_drive: true\n{% if component.userdata != \"\" %}\n      userdata: |\n        {{ component.userdata | indent(8) | safe }}\n{% endif %}\n      networks:\n{% for componentInterface in component.componentInterfaces %}\n        - port: { get_resource: {{tenant.prefix}}{{component_name}}_{{tenant.prefix}}{{componentInterface.network}} }\n{% endfor %}\n{% if component.volumes|length > 0 %}\n      block_device_mapping\n{% set devices = [ '', '/dev/vda', '/dev/vdb', '/dev/vdc', '/dev/vdd', '/dev/vde', '/dev/vdf', '/dev/vdg', '/dev/vdh', '/dev/vdi', '/dev/vdj' ] %}\n{% for volume in component.volumes %}\n        - device_name: {{ devices[loop.index] }}\n          volume_id:   { get_resource: {{tenant.prefix}}{{component_name}}_{{volume.name}} }\n{% endfor %}\n{% endif %}\n\n{% endfor %}{% endif %}{% endif %}{% endfor %}"},d={data(){return{model:p["u"],current:p["j"],target:p["w"],view:m["c"],templates:f}},components:{AppTopbar:i["default"],AppContent:a["default"],AppSidebarContent:s["default"],modal:c["default"]}},l=d,u=(t("6f51"),t("2877")),v=Object(u["a"])(l,o,r,!1,null,null,null);n["default"]=v.exports},"85ec":function(e,n,t){},"8c91":function(e,n,t){"use strict";t.r(n);var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{class:e.view.mode,attrs:{id:"appheader"}},[e._m(0),t("div",{staticClass:"label",attrs:{id:"apptitle"}},[e._v(e._s(e.title))]),t("div",{staticClass:"buttons",attrs:{id:"appbuttons"}},[t("div",{attrs:{title:"Tenant overview"},on:{click:function(n){return e.context("Tenant")}}},[t("i",{staticClass:"fas fa-map"}),e._v(" Overview ")]),e.locationHostname?t("div",{attrs:{title:"Monitoring overview"},on:{click:function(n){return e.context("Monitoring")}}},[t("i",{staticClass:"fas fa-heartbeat"}),e._v(" Monitoring ")]):e._e(),t("div",{attrs:{title:"Reset model"},on:{click:e.reset}},[t("i",{staticClass:"fas fa-certificate"}),e._v(" Reset ")]),t("div",{attrs:{title:"Validate model"},on:{click:e.validate}},[t("i",{staticClass:"fas fa-check-circle"}),e._v(" Validate ")]),t("div",{attrs:{title:"Import model"},on:{click:function(n){return e.context("Import")}}},[t("i",{staticClass:"fas fa-arrow-alt-circle-down"}),e._v(" Import ")]),t("div",{attrs:{title:"Export model"},on:{click:function(n){return e.context("Export")}}},[t("i",{staticClass:"fas fa-arrow-alt-circle-up"}),e._v(" Export ")]),t("div",{attrs:{title:"Compare current and target state"},on:{click:function(n){return e.context("Delta")}}},[t("i",{staticClass:"fas fa-arrow-circle-right "}),e._v(" Compare ")]),e.locationHostname?t("div",{attrs:{title:"Documentation"},on:{click:function(n){return e.context("Docs")}}},[t("i",{staticClass:"fas fa-book"}),e._v(" Docs ")]):e._e(),t("div",{staticClass:"state",attrs:{title:"Toggle between current and target state"},on:{click:e.toggleState}},[e._v(" "),t("i",{staticClass:"fas fa-adjust"}),e._v(" State: "+e._s(e.view.mode)+" ")])]),t("div",{staticClass:"tabs",attrs:{id:"apptabs"}},["Tenant"===e.view.navigation?[t("div",{staticClass:"active"},[e._v("General")]),t("div",{on:{click:function(n){return e.context("Flavor")}}},[e._v("Flavors")]),t("div",{on:{click:function(n){return e.context("Image")}}},[e._v("Images")]),t("div",{on:{click:function(n){return e.context("Network")}}},[e._v("Networks")]),t("div",{on:{click:function(n){return e.context("Component")}}},[e._v("Components")])]:e._e(),"Image"===e.view.navigation?[t("div",{on:{click:function(n){return e.context("Tenant")}}},[e._v("General")]),t("div",{on:{click:function(n){return e.context("Flavor")}}},[e._v("Flavors")]),t("div",{staticClass:"active"},[e._v("Images")]),t("div",{on:{click:function(n){return e.context("Network")}}},[e._v("Networks")]),t("div",{on:{click:function(n){return e.context("Component")}}},[e._v("Components")])]:e._e(),"Flavor"===e.view.navigation?[t("div",{on:{click:function(n){return e.context("Tenant")}}},[e._v("General")]),t("div",{staticClass:"active"},[e._v("Flavors")]),t("div",{on:{click:function(n){return e.context("Image")}}},[e._v("Images")]),t("div",{on:{click:function(n){return e.context("Network")}}},[e._v("Networks")]),t("div",{on:{click:function(n){return e.context("Component")}}},[e._v("Components")])]:e._e(),"Network"===e.view.navigation?[t("div",{on:{click:function(n){return e.context("Tenant")}}},[e._v("General")]),t("div",{on:{click:function(n){return e.context("Flavor")}}},[e._v("Flavors")]),t("div",{on:{click:function(n){return e.context("Image")}}},[e._v("Images")]),t("div",{staticClass:"active"},[e._v("Networks")]),t("div",{on:{click:function(n){return e.context("Component")}}},[e._v("Components")])]:e._e(),"Component"===e.view.navigation?[t("div",{on:{click:function(n){return e.context("Tenant")}}},[e._v("General")]),t("div",{on:{click:function(n){return e.context("Flavor")}}},[e._v("Flavors")]),t("div",{on:{click:function(n){return e.context("Image")}}},[e._v("Images")]),t("div",{on:{click:function(n){return e.context("Network")}}},[e._v("Networks")]),t("div",{staticClass:"active"},[e._v("Components")])]:e._e(),"Tenant"!=e.view.navigation&&"Delta"!=e.view.navigation&&"Monitoring"!=e.view.navigation?t("div",{staticClass:"button",on:{click:e.add}},[t("i",{staticClass:"fas fa-plus"})]):e._e()],2)])},r=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"logo"},[t("i",{staticClass:"fas fa-cloud"}),e._v(" VNF Designer")])}],i=t("9acf"),a=t("a79f"),s=t("8cd9"),c=t("783b"),p=t.n(c),m={title:"VNF Desciptor",description:"A simple VNF descriptor",type:"object",required:["schema","vnf","version","tenant","flavors","images","networks","components"],properties:{schema:{type:"string",enum:["1.0.1"],description:"The version of the schema"},vnf:{type:"string",minLength:1,description:"The unique identifier for a virtual network function"},version:{type:"string",pattern:"^\\d+\\.\\d+.\\d+$",description:"Semantic version of the VNF descriptor"},tenant:{description:"The tenant information",type:"object",required:["name","auth"],properties:{name:{type:"string",description:"name of the tenant"},prefix:{type:"string",description:"prefix for tenant resources"},auth:{description:"The authentication information",type:"object",required:["username","password","proxy","url","cert","region","vol_api","plugin"],properties:{username:{type:"string",description:"username for accessing the API"},password:{type:"string",description:"password for accessing the API"},proxy:{type:"string",description:"url for API proxy"},url:{type:"string",description:"url for the API"},cert:{type:"string",description:"location of certificate file"},region:{type:"string",description:"region of tenant"},vol_api:{type:"string",description:"version of volume API"},plugin:{type:"string",description:"authentication plugin"}}},service:{description:"The parameters of the service network",type:"object",required:["network","cidr","gateway","proxy","port"],properties:{network:{type:"string",description:"name of the service network"},cidr:{type:"string",description:"cidr of the service network"},gateway:{anyOf:[{type:"string",description:"gateway ip address",format:"ipv4"},{const:""}]},proxy:{anyOf:[{type:"string",description:"proxy ip address",format:"ipv4"},{const:""}]},port:{type:"string",description:"proxy port number"}}},jumphost:{anyOf:[{type:"string",description:"jumphost ip address",format:"ipv4"},{const:""}]},proxy:{description:"The parameters of the http proxy",type:"object",properties:{http:{type:"string",description:"url for http proxy"},https:{type:"string",description:"url for https proxy"}}}}},flavors:{description:"The sizing of virtual servers",type:"array",items:{title:"Flavor",type:"object",required:["uuid","name","vcpu","ram","disk","public","special"],properties:{uuid:{type:"string",description:"Unique identifier of the flavor"},name:{type:"string",description:"Name of the flavor"},vcpu:{type:"number",description:"Number of virtual core processing units as string"},ram:{type:"number",description:"Size of memory in megabytes as string"},disk:{type:"number",description:"Size of local disk in gigabytes as string"},public:{type:"string",enum:["true","false"],description:"Image is a predefined public image"},special:{description:"Additional special attributes",type:"array",items:{type:"object",description:"Key-value pair",required:["key","value"],properties:{key:{type:"string",description:"Attribute name"},value:{type:"string",description:"Attribute value"}}}}}}},images:{description:"The operating systems for virtual servers",type:"array",items:{title:"Image",type:"object",required:["uuid","name","disk","container"],properties:{uuid:{type:"string",description:"Unique identifier of the image"},name:{type:"string",description:"Name of the image"},version:{type:"string",description:"Version of the image"},format:{type:"string",enum:["aki","ami","ari","iso","qcow2","raw","vdi","vhd","vhdx","vmdk"],description:"Disk format of the image"},container:{type:"string",enum:["aki","ami","ari","bare","docker","ova","ovf"],description:"Container format of the image"},disk:{type:"string",description:"Minimum disk requirements"},size:{type:"string",description:"Size of the image"},checksum:{type:"string",description:"Checksum of the image"},url:{type:"string",description:"URL for the image"},special:{type:"string",description:"Additional special attributes"}}}},networks:{description:"The virtual networks",type:"array",items:{title:"Network",type:"object",required:["uuid","ipv4","ipv4gw","ipv4start","ipv4end","ipv6","ipv6gw","ipv6start","ipv6end","route","import","export","special"],properties:{uuid:{type:"string",description:"Unique identifier of the virtual network"},name:{type:"string",description:"Name of the virtual network"},ipv4:{type:"string",description:"IPv4 CIDR of the virtual network"},ipv4gw:{type:"string",description:"IPv4 gateway of the virtual network"},ipv4start:{type:"string",description:"IPv4 start address of the virtual network"},ipv4end:{type:"string",description:"IPv4 end address of the virtual network"},ipv6:{type:"string",description:"IPv6 attributes of the virtual network"},ipv6gw:{type:"string",description:"IPv6 gateway of the virtual network"},ipv6start:{type:"string",description:"IPv6 start address of the virtual network"},ipv6end:{type:"string",description:"IPv6 end address of the virtual network"},route:{type:"string",description:"Comma seperated list of route targets"},export:{type:"string",description:"Comma seperated list of export targets"},import:{type:"string",description:"Comma seperated list of import targets"},special:{type:"string",description:"Additional special attributes"}}}},components:{description:"The virtual servers",type:"array",items:{title:"Component",type:"object",required:["uuid","name","placement","flavor","image","min","size","max","componentInterfaces","volumes","services","dependencies","userdata"],properties:{uuid:{type:"string",description:"Unique identifier of the virtual server"},name:{type:"string",description:"Name of the virtual server"},user:{type:"string",description:"Name of the user account"},placement:{type:"string",enum:["OTHER","EXT","INT","MGMT","ROUTER"],description:"Placement of the virtual server or type of component"},flavor:{type:"string",description:"Name of the virtual server sizing"},image:{type:"string",description:"Name of the operating system"},min:{type:"number",description:"Minimum size of the cluster"},size:{type:"number",description:"Default size of the cluster"},max:{type:"number",description:"Maximum size of the cluster"},userdata:{type:"string",description:"Initialisation script"},componentInterfaces:{description:"The componentInterfaces to virtual networks",type:"array",items:{title:"Component componentInterface",type:"object",required:["network","attributes"],properties:{network:{type:"string",description:"Name of the virtual network"},attributes:{type:"string",description:"Additional special attributes"}}}},volumes:{description:"The attached virtual block storage",type:"array",items:{title:"Component Volume",type:"object",required:["name","size","type","attributes"],properties:{name:{type:"string",description:"Name of the virtual network"},size:{type:"number",description:"Size of the block storage in gigabyte"},type:{type:"string",enum:["EXT","INT"],description:"Name of block storage pool"},attributes:{type:"string",description:"Additional special attributes"}}}},services:{description:"The exposed services",type:"array",items:{title:"Component Service",type:"object",required:["name","network","protocol","range"],properties:{name:{type:"string",description:"Name of the service"},network:{type:"string",description:"The virtual network via which the service is exposed"},protocol:{type:"string",enum:["tcp","udp","icmp","sctp","any","none"],description:"The service protocol"},range:{type:"string",minimum:1,description:"Port range"}}}},dependencies:{description:"The dependencies to services provided by other componennts",type:"array",items:{title:"Component Network",type:"object",required:["component","service","network"],properties:{component:{type:"string",description:"Name of the other component"},service:{type:"string",description:"The name of the service provided by the other component"},network:{type:"string",description:"The virtual network via which the service is consumed"}}}}}}}}};function f(e){var n=new p.a,t=n.compile(m),o=t(e);return o?"":(Object(i["b"])(t.errors[0].dataPath),"Schema error:\nfield "+t.errors[0].message+"\nLocation: "+t.errors[0].dataPath)}function d(e){var n=e.flavors.map(e=>e.name),t=e.images.map(e=>e.name),o=e.networks.map(e=>e.name),r=e.components.map(e=>e.name),a=[];for(var s of e.components)for(var c of s.services)a.push(s.name+":"+c.name);for(var p=0;p<e.components.length;p++){if(s=e.components[p],!n.includes(s.flavor))return Object(i["b"])(".components["+p+"].flavor"),"Reference error:\ninvalid flavor .components["+p+"].flavor";if(!t.includes(s.image))return Object(i["b"])(".components["+p+"].image"),"Reference error:\ninvalid image .components["+p+"].image";for(var m=[],f=0;f<s.componentInterfaces.length;f++){var d=s.componentInterfaces[f];if(m.push(d.network),!o.includes(d.network))return Object(i["b"])(".components["+p+"].componentInterfaces["+f+"].network"),"Reference error\ninvalid network .components["+p+"].componentInterfaces["+f+"].network"}for(f=0;f<s.services.length;f++)if(c=s.services[f],!m.includes(c.network))return Object(i["b"])(".components["+p+"].services["+f+"].network"),"Reference error\ninvalid network .components["+p+"].services["+f+"].network";for(f=0;f<s.dependencies.length;f++){let e=s.dependencies[f];if(!r.includes(e.component))return Object(i["b"])(".components["+p+"].dependencies["+f+"].component"),"Reference error\ninvalid component .components["+p+"].dependencies["+f+"].component";if(!m.includes(e.network))return Object(i["b"])(".components["+p+"].dependencies["+f+"].network"),"Reference error\ninvalid network .components["+p+"].dependencies["+f+"].component";var l=e.component+":"+e.service;if(!a.includes(l))return Object(i["b"])(".components["+p+"].dependencies["+f+"].service"),"Reference error\ninvalid service .components["+p+"].dependencies["+f+"].service"}}return""}var l={props:["model","view"],data(){return{locationHostname:window.location.hostname}},computed:{title:function(){switch(this.view.detail){case"Monitoring":return"Monitoring: "+this.model.vnf+" ("+this.model.version+")";case"Delta":return"Comparison: "+a["j"].vnf+" ("+a["j"].version+") versus "+a["w"].vnf+" ("+a["w"].version+")"}return("current"===this.view.mode?"Current state: ":"Target state: ")+this.model.vnf+" ("+this.model.version+")"}},methods:{context:function(e){Object(i["a"])(e);var n=document.getElementById("appdetail");n.style.left=null;var t=document.getElementById("apptabs");switch(t.style.display=null,this.view.detail="Tenant",e){case"Monitoring":this.view.detail="Monitoring",n.style.left="0px",t.style.display="none",this.$emit("monitor");break;case"Import":this.view.detail="Import";break;case"Export":this.view.detail="Export";break;case"Delta":this.view.detail="Delta",n.style.left="0px",t.style.display="none";break;case"Docs":var o=window.open(window.location.href+"docs","_blank");o.focus();break;default:}},toggleState:function(){if("current"===this.view.mode){JSON.parse(JSON.stringify(this.model));this.view.mode="target",Object(a["v"])(a["w"])}else if("target"===this.view.mode){JSON.parse(JSON.stringify(this.model));this.view.mode="current",Object(a["v"])(a["j"])}var e=document.getElementById("appdetail");e.style.left=null;var n=document.getElementById("apptabs");n.style.display=null,Object(i["a"])("Tenant")},add:function(){"Flavor"===this.view.navigation&&Object(a["f"])(),"Image"===this.view.navigation&&Object(a["h"])(),"Network"===this.view.navigation&&Object(a["i"])(),"Component"===this.view.navigation&&Object(a["a"])()},del:function(){"Flavor"===this.view.navigation&&deleteFlavor(),"Image"===this.view.navigation&&deleteImage(),"Network"===this.view.navigation&&deleteNetwork(),"Component"===this.view.navigation&&deleteComponent()},validate:function(){var e=JSON.parse(JSON.stringify(this.model)),n=f(e);""==n?(n=d(e),this.view.modal=""==n?"No Validation Errors":n):this.view.modal=n},reset:function(){if("current"===this.view.mode){let e=JSON.parse(JSON.stringify(Object(s["b"])()));this.view.mode="current",Object(a["v"])(e),Object(i["a"])("Tenant")}else if("target"===this.view.mode){let e=JSON.parse(JSON.stringify(Object(s["b"])()));this.view.mode="target",Object(a["v"])(e),Object(i["a"])("Tenant"),this.$forceUpdate()}}}},u=l,v=(t("121f"),t("2877")),h=Object(v["a"])(u,o,r,!1,null,"02c17120",null);n["default"]=h.exports},"8cd9":function(e,n,t){"use strict";function o(e){var n=/fixed:[^;]*/i,t=[];if(str1=e.match(n),!str1)return t;for(str5 of(str2=str1[0],str3=str2.substr(7),str4=str3.split(","),str4))if(str5.indexOf("-")<0)t.push(str5);else for(str6 of s(str5))t.push(str6);return t}function r(e){var n=/allowed:[^;]*/i,t=[];if(str1=e.match(n),!str1)return t;for(str5 of(str2=str1[0],str3=str2.substr(9),str4=str3.split(","),str4))if(str5.indexOf("-")<0)t.push(str5);else for(str6 of s(str5))t.push(str6);return t}function i(e){return parts=e.split("-"),2==parts.length?parts[0]:e}function a(e){return parts=e.split("-"),2==parts.length?parts[1]:e}function s(e){var n=[];pos=e.lastIndexOf("."),prefix=e.substr(0,pos),rng=e.substr(pos+1),parts=rng.split("-"),first=parseInt(parts[0],10),last=parseInt(parts[1],10);for(var t=first;t<=last;t++)n.push(prefix+"."+t);return n}function c(){return{vnf:"",version:"",tenant:{name:"",auth:{username:"",password:"",proxy:"",url:"",cert:"",region:"",vol_api:"",plugin:""},service:{network:"",cidr:"",gateway:""},proxy:{address:"",port:""},jumphost:""},flavors:[],images:[],networks:[],components:[]}}t.d(n,"c",(function(){return o})),t.d(n,"a",(function(){return r})),t.d(n,"e",(function(){return i})),t.d(n,"d",(function(){return a})),t.d(n,"b",(function(){return c}))},9455:function(e,n,t){"use strict";var o=t("f0ce"),r=t.n(o);r.a},"999d":function(e,n,t){"use strict";var o=t("0c89"),r=t.n(o);r.a},"9acf":function(e,n,t){"use strict";t.d(n,"c",(function(){return r})),t.d(n,"a",(function(){return i})),t.d(n,"b",(function(){return a}));var o=t("a79f"),r={navigation:"Tenant",detail:"Tenant",entity:null,field:null,export:"Canonical",modal:"",now:"",mode:"current"};function i(e){if("Docs"!==e){if("Import"===e)return r.navigation="Tenant",void(r.detail="Import");if("Export"===e)return r.navigation="Tenant",void(r.detail="Export");if("Delta"===e)return r.navigation="Delta",void(r.detail="Delta");if("Tenant"===e)return r.navigation="Tenant",void(r.detail="Tenant");r.navigation=e,r.detail!==r.navigation&&(r.detail="Tenant")}}function a(e){var n={flavors:"Flavor",images:"Image",networks:"Network",components:"Component"},t=e.split(".");t.length;if(console.log(e),2===t.length)return r.navigation="Tenant",r.detail="Tenant",void(r.field=t[1]);if("tenant"===t[1])return r.navigation="Tenant",r.detail="Tenant",void(3===t.length?r.field=t[1]+"_"+t[2]:r.field=t[1]+"_"+t[2]+"_"+t[3]);if(3===t.length){var i=t[1].indexOf("["),a=t[1].substr(0,i),s=Number(t[1].substr(i+1).replace("]","")),c=t[2];return r.navigation=n[a],r.detail=n[a],r.entity=o["u"][a][s],void(r.field=c)}if(4===t.length){i=t[1].indexOf("["),a=t[1].substr(0,i),s=Number(t[1].substr(i+1).replace("]",""));var p=t[2].indexOf("["),m=t[2].substr(0,p),f=Number(t[2].substr(p+1).replace("]",""));c=m+"_"+String(f)+"_"+t[3];return r.navigation=n[a],r.detail=n[a],r.entity=o["u"][a][s],void(r.field=c)}console.log(t)}},a79f:function(e,n,t){"use strict";t.d(n,"j",(function(){return a})),t.d(n,"w",(function(){return s})),t.d(n,"u",(function(){return c})),t.d(n,"v",(function(){return p})),t.d(n,"f",(function(){return f})),t.d(n,"q",(function(){return d})),t.d(n,"g",(function(){return l})),t.d(n,"o",(function(){return u})),t.d(n,"h",(function(){return v})),t.d(n,"r",(function(){return h})),t.d(n,"i",(function(){return _})),t.d(n,"s",(function(){return k})),t.d(n,"a",(function(){return g})),t.d(n,"p",(function(){return w})),t.d(n,"e",(function(){return b})),t.d(n,"n",(function(){return x})),t.d(n,"c",(function(){return y})),t.d(n,"l",(function(){return I})),t.d(n,"t",(function(){return O})),t.d(n,"d",(function(){return T})),t.d(n,"m",(function(){return C})),t.d(n,"b",(function(){return E})),t.d(n,"k",(function(){return R}));var o=t("651e"),r=t.n(o),i='\n---\nschema:     1.0.1\nvnf:        demo\nversion:    1.0.0\ntenant:\n  name:          "demo"\n  prefix:        ""\n  auth:\n    username:    "demo"\n    password:    "S3CR3T"\n    proxy:       ""\n    url:         ""\n    cert:        ""\n    region:      ""\n    vol_api:     ""\n    plugin:      ""\n  service:\n    network:     ""\n    cidr:        ""\n    gateway:     ""\n    proxy:       ""\n    port:        ""\n  jumphost:      ""\n  proxy:\n    http:        ""\n    https:       ""\nflavors:\n  - uuid:    "08e88f71-8916-428e-ae2e-e37b50619405"\n    name:    "none"\n    vcpu:    0\n    ram:     0\n    disk:    0\n    public:  "false"\n    special: []\n  - uuid:    "b18f5596-e88b-4e0c-a2b3-da97fae62e85"\n    name:    "standard"\n    vcpu:    2\n    ram:     8\n    disk:    10\n    public:  "false"\n    special: []\nimages:\n- { uuid: "55b1f2fc-caab-4bea-8f4b-5b7c46d7abb6", name: "none", version: "", format: "qcow2", container: "bare", disk: "0", size: "0", checksum: "", url: "", special: "" }\n- { uuid: "3543f742-81b7-4dd3-86d9-ea52b134dbb1", name: "CentOS 7", version: "7.5", format: "qcow2", container: "bare", disk: "0", size: "0", checksum: "b376afdc0150601f15e53516327d9832216e01a300fecfc302066e36e2ac2b39", url: "https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1905.qcow2", special: "" }\nnetworks:\n  - uuid:      "726dc281-2eb5-469e-857d-4af9336ff02a"\n    name:      "pub"\n    external:  "true"\n    ipv4:      "0.0.0.0/0"\n    ipv4gw:    ""\n    ipv4start: ""\n    ipv4end:   ""\n    ipv6:      ""\n    ipv6gw:    ""\n    ipv6start: ""\n    ipv6end:   ""\n    route:     ""\n    export:    ""\n    import:    ""\n    special:   ""\n  - uuid:      "221d325b-35a5-4eca-8a3f-ea5ade11f6fe"\n    name:      "ext"\n    external:  ""\n    ipv4:      "10.0.1.0/0"\n    ipv4gw:    "10.0.1.1"\n    ipv4start: "10.0.1.100"\n    ipv4end:   "10.0.1.199"\n    ipv6:      ""\n    ipv6gw:    ""\n    ipv6start: ""\n    ipv6end:   ""\n    route:     ""\n    export:    ""\n    import:    ""\n    special:   ""\n  - uuid:      "540146df-32f7-4aae-b65b-a4523c9c328d"\n    name:      "int"\n    external:  ""\n    ipv4:      "10.0.0.2/24"\n    ipv4gw:    "10.0.0.1"\n    ipv4start: "10.0.0.100"\n    ipv4end:   "10.0.0.199"\n    ipv6:      ""\n    ipv6gw:    ""\n    ipv6start: ""\n    ipv6end:   ""\n    route:     ""\n    export:    ""\n    import:    ""\n    special:   ""\n  - uuid:      "20cefffb-6ec5-4161-8562-612a4651e436"\n    name:      "oam"\n    external:  "false"\n    ipv4:      "10.0.0.0/24"\n    ipv4gw:    "10.0.0.1"\n    ipv4start: "10.0.0.100"\n    ipv4end:   "10.0.0.199"\n    ipv6:      ""\n    ipv6gw:    ""\n    ipv6start: ""\n    ipv6end:   ""\n    route:     ""\n    export:    ""\n    import:    ""\n    special:   ""\ncomponents:\n  - uuid:         "f76afc3d-b19d-4f67-ab56-f7261501b5c4"\n    name:         "user"\n    user:         "root"\n    placement:    "OTHER"\n    flavor:       "none"\n    image:        "none"\n    min:          1\n    size:         1\n    max:          1\n    volumes:      []\n    componentInterfaces:\n      - { network: "pub", attributes: "" }\n    services:     []\n    dependencies:\n      - { component: "firewall", service: "https", network: "pub" }\n    userdata:     ""\n\n  - uuid:         "9572cd15-0c75-43f2-ad28-7031f172132f"\n    name:         "firewall"\n    user:         "root"\n    placement:    "EXT"\n    flavor:       "standard"\n    image:        "CentOS 7"\n    min:          1\n    size:         1\n    max:          1\n    volumes:      []\n    componentInterfaces:\n      - { network: "pub", attributes: "" }\n      - { network: "oam", attributes: "" }\n      - { network: "ext", attributes: "" }\n    services:\n      - { name: "ssh", network: "pub", protocol: "tcp", range: "22" }\n      - { name: "https", network: "pub", protocol: "tcp", range: "443" }\n    dependencies:\n      - { component: "application", service: "https", network: "ext" }\n    userdata:     ""\n\n  - uuid:         "4972819c-7c64-4e26-a0a0-41d86d798773"\n    name:         "application"\n    user:         "root"\n    placement:    "EXT"\n    flavor:       "none"\n    image:        "none"\n    min:          1\n    size:         3\n    max:          3\n    volumes:      []\n    componentInterfaces:\n      - { network: "oam", attributes: "" }\n      - { network: "ext", attributes: "" }\n      - { network: "int", attributes: "" }\n    services:\n      - { name: "ssh", network: "oam", protocol: "tcp", range: "22" }\n      - { name: "https", network: "ext", protocol: "tcp", range: "443" }\n    dependencies: []\n    userdata:     ""\n\n  - uuid:         "871076e7-40d9-4a24-b35f-f14adac5a67c"\n    name:         "database"\n    user:         "root"\n    placement:    "INT"\n    flavor:       "none"\n    image:        "none"\n    min:          1\n    size:         3\n    max:          3\n    volumes:\n      - { name: "data", size: 100, type: "INT", attributes: "" }\n    componentInterfaces:\n      - { network: "oam", attributes: "" }\n      - { network: "int", attributes: "" }\n    services:\n      - { name: "ssh", network: "oam", protocol: "tcp", range: "22" }\n      - { name: "mysql", network: "int", protocol: "tcp", range: "3306" }\n      - { name: "replication", network: "int", protocol: "tcp", range: "33061" }\n    dependencies:\n      - { component: "database", service: "replication", network: "int" }\n    userdata:     ""\n\n  - uuid:         "b2b214b6-37b5-4f4d-8706-8ca590b14a38"\n    name:         "devops"\n    placement:    "OTHER"\n    flavor:       "none"\n    image:        "none"\n    min:          1\n    size:         1\n    max:          1\n    volumes:      []\n    componentInterfaces:\n      - { network: "pub", attributes: "" }\n    services:     []\n    dependencies:\n      - { component: "firewall", service: "ssh", network: "pub" }\n    userdata:     ""\n\n';let a=r.a.safeLoad(i),s=r.a.safeLoad(i),c=a;function p(e){c.schema="1.0.1",c.vnf=e.vnf,c.version=e.version,c.tenant=e.tenant,c.flavors=e.flavors,c.images=e.images,c.networks=e.networks,c.components=e.components}function m(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var n=16*Math.random()|0,t="x"==e?n:3&n|8;return t.toString(16)}))}function f(){var e=m(),n=c.flavors.length+1;c.flavors.push({uuid:e,name:"flavor-"+n,public:"false",special:[]})}function d(e){var n=c.flavors.indexOf(e);n>-1&&c.flavors.splice(n,1)}function l(e){var n=e.special.length+1;e.special.push({key:"attr"+n,value:""})}function u(e,n){var t=e.special.indexOf(n);t>-1&&e.special.splice(t,1)}function v(){var e=m(),n=c.images.length+1;c.images.push({uuid:e,name:"image-"+n,version:"",format:"qcow2",container:"bare",disk:"0",size:"0",special:"",url:""})}function h(e){var n=c.images.indexOf(e);n>-1&&c.images.splice(n,1)}function _(){var e=m(),n=c.networks.length+1;c.networks.push({uuid:e,name:"net-"+n,ipv4:"",ipv4gw:"",ipv4start:"",ipv4end:"",ipv6:"",ipv6gw:"",ipv6start:"",ipv6end:"",route:"",import:"",export:"",special:""})}function k(e){var n=c.networks.indexOf(e);n>-1&&c.networks.splice(n,1)}function g(){var e=m(),n=c.components.length+1;c.components.push({uuid:e,name:"comp-"+n,placement:"MGMT",flavor:"none",image:"none",min:1,max:1,size:1,volumes:[],componentInterfaces:[],services:[],dependencies:[],userdata:[]})}function w(e){var n=c.components.indexOf(e);n>-1&&c.components.splice(n,1)}function b(e){var n=e.volumes.length+1;e.volumes.push({name:"volume-"+n,size:100,type:e.placement.toUpperCase(),attributes:""})}function x(e,n){var t=e.volumes.indexOf(n);t>-1&&e.volumes.splice(t,1)}function y(e,n=""){""!==n||e.componentInterfaces.length;e.componentInterfaces.push({network:n,ipv4:"",ipv6:"",attributes:""})}function I(e,n){var t=e.componentInterfaces.indexOf(n);t>-1&&e.componentInterfaces.splice(t,1)}function O(e,n){for(var t of e.componentInterfaces)if(t.network===n)return t;return null}function T(e){var n=e.services.length+1;e.services.push({name:"svc-"+n,network:"",protocol:"tcp",range:"0-65535"})}function C(e,n){var t=e.services.indexOf(n);t>-1&&e.services.splice(t,1)}function E(e){var n=e.dependencies.length+1;e.dependencies.push({component:"dep-"+n,service:"",network:""})}function R(e,n){var t=e.dependencies.indexOf(n);t>-1&&e.dependencies.splice(t,1)}},b517:function(e,n,t){"use strict";t.r(n);var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"appnavigation"}},["Tenant"===e.view.navigation?t("tenantform",{attrs:{model:e.model,view:e.view}}):e._e(),"Flavor"===e.view.navigation?t("flavors",{attrs:{model:e.model,view:e.view}}):e._e(),"Image"===e.view.navigation?t("images",{attrs:{model:e.model,view:e.view}}):e._e(),"Network"===e.view.navigation?t("networks",{attrs:{model:e.model,view:e.view}}):e._e(),"Component"===e.view.navigation?t("components",{attrs:{model:e.model,view:e.view}}):e._e()],1)},r=[],i={props:["model","view"],components:{tenantform:()=>t.e("chunk-e69663dc").then(t.bind(null,"feb0")),flavors:()=>t.e("chunk-2d0ce7eb").then(t.bind(null,"6061")),images:()=>t.e("chunk-2d0bda08").then(t.bind(null,"2d99")),networks:()=>t.e("chunk-2d0cebfb").then(t.bind(null,"617a")),components:()=>t.e("chunk-2d21ed27").then(t.bind(null,"d6cb"))}},a=i,s=(t("b814"),t("2877")),c=Object(s["a"])(a,o,r,!1,null,null,null);n["default"]=c.exports},b814:function(e,n,t){"use strict";var o=t("e826"),r=t.n(o);r.a},bb51:function(e,n,t){"use strict";t.r(n);var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("app")},r=[],i=t("81ad"),a={name:"Home",components:{app:i["default"]}},s=a,c=t("2877"),p=Object(c["a"])(s,o,r,!1,null,null,null);n["default"]=p.exports},bc77:function(e,n,t){},c082:function(e,n,t){"use strict";t.r(n);var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"appdetail"}},["Flavor"===e.view.detail?t("flavorform",{attrs:{model:e.model,view:e.view,flavor:e.view.entity}}):e._e(),"Image"===e.view.detail?t("imageform",{attrs:{model:e.model,view:e.view,image:e.view.entity}}):e._e(),"Network"===e.view.detail?t("networkform",{attrs:{model:e.model,view:e.view,network:e.view.entity}}):e._e(),"Component"===e.view.detail?t("componentform",{attrs:{model:e.model,component:e.view.entity}}):e._e(),"Export"===e.view.detail?t("exportform",{attrs:{model:e.model,view:e.view,templates:e.templates}}):e._e(),"Import"===e.view.detail?t("importform",{attrs:{model:e.model,view:e.view}}):e._e(),"Delta"===e.view.detail?t("deltaform",{attrs:{model:e.model,current:e.current,target:e.target,view:e.view}}):e._e(),"Tenant"===e.view.detail?t("tenant",{attrs:{model:e.model,view:e.view}}):e._e(),"Monitoring"===e.view.detail?t("monitoring",{attrs:{model:e.model,view:e.view}}):e._e()],1)},r=[],i={props:["model","current","target","view","templates"],components:{tenant:()=>t.e("chunk-10bbff56").then(t.bind(null,"be86")),tenant_network:()=>t.e("chunk-360c663a").then(t.bind(null,"24e1")),tenant_network2:()=>t.e("chunk-18aa50ba").then(t.bind(null,"98b1")),tenant_component:()=>t.e("chunk-0a483282").then(t.bind(null,"ce6d")),tenant_component2:()=>t.e("chunk-0e3452c3").then(t.bind(null,"50e8")),flavorform:()=>t.e("chunk-df2448ca").then(t.bind(null,"3c6f")),imageform:()=>t.e("chunk-54cb55e5").then(t.bind(null,"7b18")),networkform:()=>t.e("chunk-03c229be").then(t.bind(null,"5f56")),componentform:()=>t.e("chunk-dac2a49c").then(t.bind(null,"bf45")),monitoring:()=>t.e("chunk-9c8ee19a").then(t.bind(null,"2207")),importform:()=>t.e("chunk-70e8bc69").then(t.bind(null,"1050")),exportform:()=>t.e("chunk-35d7d228").then(t.bind(null,"4ba9")),deltaform:()=>t.e("chunk-2dc35639").then(t.bind(null,"0018"))}},a=i,s=(t("999d"),t("2877")),c=Object(s["a"])(a,o,r,!1,null,"271a2484",null);n["default"]=c.exports},c505:function(e,n,t){"use strict";t.r(n);var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"modal"}},[t("div",{staticClass:"content"},[t("span",{staticClass:"close",on:{click:e.close}},[e._v("×")]),t("span",{domProps:{innerHTML:e._s(e.html)}})])])},r=[],i={props:["view"],computed:{html:function(){for(var e=this.view.modal.split("\n"),n="<h2>"+e[0]+"</h2>",t="",o=1;o<e.length;o++){var r=e[o],i=r.indexOf(":");if(i<0)t=t+r+"<br/>";else{var a=r.substr(0,i),s=r.substr(i+1);t=t+"<b>"+a+":</b> "+s+"<br/>"}r.split(":",1)}return n+t}},methods:{close:function(){if(this.view.modal="",this.view.field){var e=document.getElementById(this.view.field);e&&e.focus()}}}},a=i,s=(t("9455"),t("2877")),c=Object(s["a"])(a,o,r,!1,null,"d74319f0",null);n["default"]=c.exports},e826:function(e,n,t){},f0ce:function(e,n,t){}});
//# sourceMappingURL=app.74abf5a3.js.map